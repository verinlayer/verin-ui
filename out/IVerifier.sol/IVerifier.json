{"abi":[{"type":"function","name":"calculateCreditScore","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"protocol","type":"uint8","internalType":"enum Protocol"}],"outputs":[{"name":"score","type":"uint256","internalType":"uint256"},{"name":"tier","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"","type":"tuple","internalType":"struct Proof","components":[{"name":"seal","type":"tuple","internalType":"struct Seal","components":[{"name":"verifierSelector","type":"bytes4","internalType":"bytes4"},{"name":"seal","type":"bytes32[8]","internalType":"bytes32[8]"},{"name":"mode","type":"uint8","internalType":"enum ProofMode"}]},{"name":"callGuestId","type":"bytes32","internalType":"bytes32"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"callAssumptions","type":"tuple","internalType":"struct CallAssumptions","components":[{"name":"proverContractAddress","type":"address","internalType":"address"},{"name":"functionSelector","type":"bytes4","internalType":"bytes4"},{"name":"settleChainId","type":"uint256","internalType":"uint256"},{"name":"settleBlockNumber","type":"uint256","internalType":"uint256"},{"name":"settleBlockHash","type":"bytes32","internalType":"bytes32"}]}]},{"name":"claimer","type":"address","internalType":"address"},{"name":"tokens","type":"tuple[]","internalType":"struct Erc20Token[]","components":[{"name":"underlingTokenAddress","type":"address","internalType":"address"},{"name":"aTokenAddress","type":"address","internalType":"address"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"balance","type":"uint256","internalType":"uint256"},{"name":"tokenType","type":"uint8","internalType":"enum TokenType"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCreditScore","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"protocol","type":"uint8","internalType":"enum Protocol"}],"outputs":[{"name":"score","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"recordLiquidation","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"protocol","type":"uint8","internalType":"enum Protocol"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"usersInfo","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"protocol","type":"uint8","internalType":"enum Protocol"}],"outputs":[{"name":"userInfo","type":"tuple","internalType":"struct IVerifier.UserInfo","components":[{"name":"borrowedAmount","type":"uint256","internalType":"uint256"},{"name":"suppliedAmount","type":"uint256","internalType":"uint256"},{"name":"repaidAmount","type":"uint256","internalType":"uint256"},{"name":"latestBlock","type":"uint256","internalType":"uint256"},{"name":"latestBalance","type":"uint256","internalType":"uint256"},{"name":"borrowTimes","type":"uint256","internalType":"uint256"},{"name":"supplyTimes","type":"uint256","internalType":"uint256"},{"name":"repayTimes","type":"uint256","internalType":"uint256"},{"name":"firstActivityBlock","type":"uint256","internalType":"uint256"},{"name":"liquidations","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"event","name":"UserBorrowed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"protocol","type":"uint8","indexed":true,"internalType":"enum Protocol"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalBorrowed","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"borrowCount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserRepaid","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"protocol","type":"uint8","indexed":true,"internalType":"enum Protocol"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalRepaid","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"repayCount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UserSupplied","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"protocol","type":"uint8","indexed":true,"internalType":"enum Protocol"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTotalSupplied","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"supplyCount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"calculateCreditScore(address,uint8)":"6b275f7e","claim(((bytes4,bytes32[8],uint8),bytes32,uint256,(address,bytes4,uint256,uint256,bytes32)),address,(address,address,uint256,uint256,uint256,uint8)[])":"9ca6ce2f","getCreditScore(address,uint8)":"85eec73e","recordLiquidation(address,uint8)":"9e210447","usersInfo(address,uint8)":"c9579ee8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalBorrowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowCount\",\"type\":\"uint256\"}],\"name\":\"UserBorrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalRepaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayCount\",\"type\":\"uint256\"}],\"name\":\"UserRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalSupplied\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCount\",\"type\":\"uint256\"}],\"name\":\"UserSupplied\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"calculateCreditScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"tier\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"verifierSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32[8]\",\"name\":\"seal\",\"type\":\"bytes32[8]\"},{\"internalType\":\"enum ProofMode\",\"name\":\"mode\",\"type\":\"uint8\"}],\"internalType\":\"struct Seal\",\"name\":\"seal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"callGuestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"proverContractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"settleChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"settleBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"settleBlockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CallAssumptions\",\"name\":\"callAssumptions\",\"type\":\"tuple\"}],\"internalType\":\"struct Proof\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"underlingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"enum TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"internalType\":\"struct Erc20Token[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"getCreditScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"recordLiquidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum Protocol\",\"name\":\"protocol\",\"type\":\"uint8\"}],\"name\":\"usersInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suppliedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repaidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"latestBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"repayTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstActivityBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidations\",\"type\":\"uint256\"}],\"internalType\":\"struct IVerifier.UserInfo\",\"name\":\"userInfo\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Defines the standard interface for credit scoring systems that track      user activity across multiple DeFi protocols\",\"events\":{\"UserBorrowed(address,uint8,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount borrowed in this transaction\",\"borrowCount\":\"The total number of borrow transactions for this user\",\"newTotalBorrowed\":\"The user's total borrowed amount after this transaction\",\"protocol\":\"The DeFi protocol where the borrow occurred\",\"user\":\"The address of the user who borrowed\"}},\"UserRepaid(address,uint8,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount repaid in this transaction\",\"newTotalRepaid\":\"The user's total repaid amount after this transaction\",\"protocol\":\"The DeFi protocol where the repay occurred\",\"repayCount\":\"The total number of repay transactions for this user\",\"user\":\"The address of the user who repaid\"}},\"UserSupplied(address,uint8,uint256,uint256,uint256)\":{\"params\":{\"amount\":\"The amount supplied in this transaction\",\"newTotalSupplied\":\"The user's total supplied amount after this transaction\",\"protocol\":\"The DeFi protocol where the supply occurred\",\"supplyCount\":\"The total number of supply transactions for this user\",\"user\":\"The address of the user who supplied assets\"}}},\"kind\":\"dev\",\"methods\":{\"calculateCreditScore(address,uint8)\":{\"details\":\"Computes a comprehensive credit score (0-100) and tier (A-D) based on:      - Repayment rate (35% weight): How much borrowed amount has been repaid      - Leverage/Utilization (30% weight): Borrowed vs total assets ratio (inverted)      - Cushion ratio (15% weight): Supplied assets vs borrowed assets      - History (10% weight): Address age in days (capped at 365 days)      - Recency (10% weight): Days since last activity (penalty after 90 days)Credit Score Factors:      - Higher scores for users who repay more than they borrow      - Lower scores for high leverage (borrowing close to collateral value)      - Bonus for maintaining high collateral ratios      - Penalty for liquidations (automatic score of 10)      - Time-based factors favor established, active users\",\"params\":{\"protocol\":\"The DeFi protocol to analyze (AAVE, MORPHO, COMPOUND)\",\"user\":\"The user address to calculate credit score for\"},\"returns\":{\"score\":\"The credit score (0-100, where 100 is excellent)\",\"tier\":\"The credit tier (A: 85-100, B: 70-84, C: 50-69, D: 0-49)\"}},\"claim(((bytes4,bytes32[8],uint8),bytes32,uint256,(address,bytes4,uint256,uint256,bytes32)),address,(address,address,uint256,uint256,uint256,uint8)[])\":{\"details\":\"This function processes verified token data to track user's borrowing,      supplying, and repayment activities. It updates the user's credit score data      and emits events for each activity type.Parameters:      - proof: The cryptographic proof that validates the data authenticity      - claimer: The address of the user claiming their data      - tokens: Array of Erc20Token structs containing token balances and metadataProcessing Logic:      - Only processes tokens with block numbers greater than the last processed block      - AVARIABLEDEBT tokens: Tracks borrows (balance increase) and repays (balance decrease)      - ARESERVE tokens: Tracks supplied assets (collateral deposits)      - ASTABLEDEBT tokens: Currently skipped (returns early)Credit Score Impact:      - Updates borrowedAmount, suppliedAmount, repaidAmount      - Tracks activity frequency (borrowTimes, supplyTimes, repayTimes)      - Records first activity timestamp for credit scoring      - Updates latest block and balance for temporal calculationsEvents Emitted:      - UserBorrowed: When user borrows assets      - UserSupplied: When user supplies collateral      - UserRepaid: When user repays borrowed assetsModifiers:      - onlyVerified: Ensures the proof is valid and comes from the trusted prover      - onlyClaimer: Ensures only the data owner can claim their informationSecurity:      - Validates token addresses against the registry      - Prevents processing of stale data (older block numbers)      - Requires cryptographic proof of data authenticity\"},\"getCreditScore(address,uint8)\":{\"details\":\"Simplified version of calculateCreditScore that returns only the numeric score      without the tier classification. Useful for integrations that only need the score.This function internally calls calculateCreditScore and discards the tierSee calculateCreditScore for detailed scoring methodology\",\"params\":{\"protocol\":\"The DeFi protocol to analyze (AAVE, MORPHO, COMPOUND)\",\"user\":\"The user address to get credit score for\"},\"returns\":{\"score\":\"The credit score (0-100, where 100 is excellent)\"}},\"recordLiquidation(address,uint8)\":{\"details\":\"Records when a user's position has been liquidated, which significantly      impacts their credit score. Liquidations result in an automatic score of 10.      This function should be called by external liquidation monitoring systems.Credit Score Impact:      - Liquidations are heavily penalized (score drops to 10)      - This reflects the high risk associated with liquidated positions      - Multiple liquidations are tracked but don't further reduce the scoreSecurity:      - This function is external and can be called by anyone      - Consider adding access controls in production      - Should be integrated with liquidation monitoring systems\",\"params\":{\"protocol\":\"The DeFi protocol where the liquidation occurred\",\"user\":\"The user address that was liquidated\"}},\"usersInfo(address,uint8)\":{\"params\":{\"protocol\":\"The DeFi protocol to query\",\"user\":\"The user address to query\"},\"returns\":{\"userInfo\":\"The complete user activity data for the protocol\"}}},\"title\":\"IVerifier\",\"version\":1},\"userdoc\":{\"events\":{\"UserBorrowed(address,uint8,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user borrows assets from a DeFi protocol\"},\"UserRepaid(address,uint8,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user repays borrowed assets to a DeFi protocol\"},\"UserSupplied(address,uint8,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user supplies collateral to a DeFi protocol\"}},\"kind\":\"user\",\"methods\":{\"calculateCreditScore(address,uint8)\":{\"notice\":\"Calculate credit score for a user based on their DeFi activity\"},\"claim(((bytes4,bytes32[8],uint8),bytes32,uint256,(address,bytes4,uint256,uint256,bytes32)),address,(address,address,uint256,uint256,uint256,uint8)[])\":{\"notice\":\"Claims and processes DeFi activity data for a user\"},\"getCreditScore(address,uint8)\":{\"notice\":\"Get credit score for a user (convenience function)\"},\"recordLiquidation(address,uint8)\":{\"notice\":\"Record a liquidation event for a user (penalty)\"},\"usersInfo(address,uint8)\":{\"notice\":\"Get user information for a specific protocol\"}},\"notice\":\"Interface for DeFi credit scoring and user activity verification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vlayer/interfaces/IVerifier.sol\":\"IVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/\",\":erc4626-tests/=dependencies/risc0-ethereum/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std-1.9.4/src/=dependencies/forge-std-1.9.4/src/\",\":forge-std/=dependencies/forge-std-1.9.4/src/\",\":halmos-cheatcodes/=dependencies/risc0-ethereum/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/\",\":risc0-ethereum-3.0.0/=dependencies/risc0-ethereum-3.0.0/\",\":risc0-ethereum/=dependencies/risc0-ethereum/\",\":vlayer-0.1.0/=dependencies/vlayer-1.5.0/src/\",\":vlayer-1.5.0/=dependencies/vlayer-1.5.0/src/\"],\"viaIR\":true},\"sources\":{\"dependencies/vlayer-1.5.0/src/CallAssumptions.sol\":{\"keccak256\":\"0x885a1ca11344a3154d3cb3b2cc18a77ec981f098701298d787a5173808cc3af7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ddba86e136c60bc4199af9c5971819ad3a3f06c699dee46cf2923b8dbeb4e426\",\"dweb:/ipfs/QmPwkGk8h8NkR6DUnDimn5HeweWgbvpsr9wf1VgmXYEPRB\"]},\"dependencies/vlayer-1.5.0/src/Proof.sol\":{\"keccak256\":\"0x32db566314f73f696e2ff0839ca7a41c9f04d74c96f2d8604c53f92dccfa3a43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2ea032ed2a364dd97eeebe7df93cf252913284ea76a1fa1478d9436a916a83f3\",\"dweb:/ipfs/QmW873QftHexSzpEqmAVJ9vUd1cJD584qTa7mzqkhhipMZ\"]},\"dependencies/vlayer-1.5.0/src/Seal.sol\":{\"keccak256\":\"0xa61c6146260bd3006392ec7b91bfb46c1d73493ff5a01c9ce702b8c90f1a392c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ebf725dc623c0b6d3f8e74c2eb625d662303c22ba646fab710a4fbdf20d5e3c3\",\"dweb:/ipfs/Qmat3kzvD19kLMHRmomknHzJnDdQfyU5pQDbhP5BsZTSvg\"]},\"src/vlayer/interfaces/IVerifier.sol\":{\"keccak256\":\"0xa8f93a2a021ca89da9f7f97f2795635dd8f765473c06522138f48e64e1c93cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13b132d3b22975de4f0220e901b816b931f33ddca7a95a09f2fe62a387ec111\",\"dweb:/ipfs/QmYnNfAXZCeJnF2fUFAPMmzPMkmKe4VLoSeTpbYKG64o78\"]},\"src/vlayer/types/TeleportTypes.sol\":{\"keccak256\":\"0x117c2f5a486a8400eaf699e297f0a7ea7da36d3ca243108e2c15699fc367e302\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c938540eb6bf0e862974282bf214be1b8f9ff8674c9a887daedcf1c759fc36d5\",\"dweb:/ipfs/QmaeXMuNAVMfVEbvU7HusQNsoEAaZaRHR5NE3zCEUjZtna\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"enum Protocol","name":"protocol","type":"uint8","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalBorrowed","type":"uint256","indexed":false},{"internalType":"uint256","name":"borrowCount","type":"uint256","indexed":false}],"type":"event","name":"UserBorrowed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"enum Protocol","name":"protocol","type":"uint8","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalRepaid","type":"uint256","indexed":false},{"internalType":"uint256","name":"repayCount","type":"uint256","indexed":false}],"type":"event","name":"UserRepaid","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"enum Protocol","name":"protocol","type":"uint8","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTotalSupplied","type":"uint256","indexed":false},{"internalType":"uint256","name":"supplyCount","type":"uint256","indexed":false}],"type":"event","name":"UserSupplied","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum Protocol","name":"protocol","type":"uint8"}],"stateMutability":"view","type":"function","name":"calculateCreditScore","outputs":[{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"uint8","name":"tier","type":"uint8"}]},{"inputs":[{"internalType":"struct Proof","name":"","type":"tuple","components":[{"internalType":"struct Seal","name":"seal","type":"tuple","components":[{"internalType":"bytes4","name":"verifierSelector","type":"bytes4"},{"internalType":"bytes32[8]","name":"seal","type":"bytes32[8]"},{"internalType":"enum ProofMode","name":"mode","type":"uint8"}]},{"internalType":"bytes32","name":"callGuestId","type":"bytes32"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"struct CallAssumptions","name":"callAssumptions","type":"tuple","components":[{"internalType":"address","name":"proverContractAddress","type":"address"},{"internalType":"bytes4","name":"functionSelector","type":"bytes4"},{"internalType":"uint256","name":"settleChainId","type":"uint256"},{"internalType":"uint256","name":"settleBlockNumber","type":"uint256"},{"internalType":"bytes32","name":"settleBlockHash","type":"bytes32"}]}]},{"internalType":"address","name":"claimer","type":"address"},{"internalType":"struct Erc20Token[]","name":"tokens","type":"tuple[]","components":[{"internalType":"address","name":"underlingTokenAddress","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"enum TokenType","name":"tokenType","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"claim"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum Protocol","name":"protocol","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCreditScore","outputs":[{"internalType":"uint256","name":"score","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum Protocol","name":"protocol","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"recordLiquidation"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"enum Protocol","name":"protocol","type":"uint8"}],"stateMutability":"view","type":"function","name":"usersInfo","outputs":[{"internalType":"struct IVerifier.UserInfo","name":"userInfo","type":"tuple","components":[{"internalType":"uint256","name":"borrowedAmount","type":"uint256"},{"internalType":"uint256","name":"suppliedAmount","type":"uint256"},{"internalType":"uint256","name":"repaidAmount","type":"uint256"},{"internalType":"uint256","name":"latestBlock","type":"uint256"},{"internalType":"uint256","name":"latestBalance","type":"uint256"},{"internalType":"uint256","name":"borrowTimes","type":"uint256"},{"internalType":"uint256","name":"supplyTimes","type":"uint256"},{"internalType":"uint256","name":"repayTimes","type":"uint256"},{"internalType":"uint256","name":"firstActivityBlock","type":"uint256"},{"internalType":"uint256","name":"liquidations","type":"uint256"}]}]}],"devdoc":{"kind":"dev","methods":{"calculateCreditScore(address,uint8)":{"details":"Computes a comprehensive credit score (0-100) and tier (A-D) based on:      - Repayment rate (35% weight): How much borrowed amount has been repaid      - Leverage/Utilization (30% weight): Borrowed vs total assets ratio (inverted)      - Cushion ratio (15% weight): Supplied assets vs borrowed assets      - History (10% weight): Address age in days (capped at 365 days)      - Recency (10% weight): Days since last activity (penalty after 90 days)Credit Score Factors:      - Higher scores for users who repay more than they borrow      - Lower scores for high leverage (borrowing close to collateral value)      - Bonus for maintaining high collateral ratios      - Penalty for liquidations (automatic score of 10)      - Time-based factors favor established, active users","params":{"protocol":"The DeFi protocol to analyze (AAVE, MORPHO, COMPOUND)","user":"The user address to calculate credit score for"},"returns":{"score":"The credit score (0-100, where 100 is excellent)","tier":"The credit tier (A: 85-100, B: 70-84, C: 50-69, D: 0-49)"}},"claim(((bytes4,bytes32[8],uint8),bytes32,uint256,(address,bytes4,uint256,uint256,bytes32)),address,(address,address,uint256,uint256,uint256,uint8)[])":{"details":"This function processes verified token data to track user's borrowing,      supplying, and repayment activities. It updates the user's credit score data      and emits events for each activity type.Parameters:      - proof: The cryptographic proof that validates the data authenticity      - claimer: The address of the user claiming their data      - tokens: Array of Erc20Token structs containing token balances and metadataProcessing Logic:      - Only processes tokens with block numbers greater than the last processed block      - AVARIABLEDEBT tokens: Tracks borrows (balance increase) and repays (balance decrease)      - ARESERVE tokens: Tracks supplied assets (collateral deposits)      - ASTABLEDEBT tokens: Currently skipped (returns early)Credit Score Impact:      - Updates borrowedAmount, suppliedAmount, repaidAmount      - Tracks activity frequency (borrowTimes, supplyTimes, repayTimes)      - Records first activity timestamp for credit scoring      - Updates latest block and balance for temporal calculationsEvents Emitted:      - UserBorrowed: When user borrows assets      - UserSupplied: When user supplies collateral      - UserRepaid: When user repays borrowed assetsModifiers:      - onlyVerified: Ensures the proof is valid and comes from the trusted prover      - onlyClaimer: Ensures only the data owner can claim their informationSecurity:      - Validates token addresses against the registry      - Prevents processing of stale data (older block numbers)      - Requires cryptographic proof of data authenticity"},"getCreditScore(address,uint8)":{"details":"Simplified version of calculateCreditScore that returns only the numeric score      without the tier classification. Useful for integrations that only need the score.This function internally calls calculateCreditScore and discards the tierSee calculateCreditScore for detailed scoring methodology","params":{"protocol":"The DeFi protocol to analyze (AAVE, MORPHO, COMPOUND)","user":"The user address to get credit score for"},"returns":{"score":"The credit score (0-100, where 100 is excellent)"}},"recordLiquidation(address,uint8)":{"details":"Records when a user's position has been liquidated, which significantly      impacts their credit score. Liquidations result in an automatic score of 10.      This function should be called by external liquidation monitoring systems.Credit Score Impact:      - Liquidations are heavily penalized (score drops to 10)      - This reflects the high risk associated with liquidated positions      - Multiple liquidations are tracked but don't further reduce the scoreSecurity:      - This function is external and can be called by anyone      - Consider adding access controls in production      - Should be integrated with liquidation monitoring systems","params":{"protocol":"The DeFi protocol where the liquidation occurred","user":"The user address that was liquidated"}},"usersInfo(address,uint8)":{"params":{"protocol":"The DeFi protocol to query","user":"The user address to query"},"returns":{"userInfo":"The complete user activity data for the protocol"}}},"version":1},"userdoc":{"kind":"user","methods":{"calculateCreditScore(address,uint8)":{"notice":"Calculate credit score for a user based on their DeFi activity"},"claim(((bytes4,bytes32[8],uint8),bytes32,uint256,(address,bytes4,uint256,uint256,bytes32)),address,(address,address,uint256,uint256,uint256,uint8)[])":{"notice":"Claims and processes DeFi activity data for a user"},"getCreditScore(address,uint8)":{"notice":"Get credit score for a user (convenience function)"},"recordLiquidation(address,uint8)":{"notice":"Record a liquidation event for a user (penalty)"},"usersInfo(address,uint8)":{"notice":"Get user information for a specific protocol"}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/","erc4626-tests/=dependencies/risc0-ethereum/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std-1.9.4/src/=dependencies/forge-std-1.9.4/src/","forge-std/=dependencies/forge-std-1.9.4/src/","halmos-cheatcodes/=dependencies/risc0-ethereum/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/","risc0-ethereum-3.0.0/=dependencies/risc0-ethereum-3.0.0/","risc0-ethereum/=dependencies/risc0-ethereum/","vlayer-0.1.0/=dependencies/vlayer-1.5.0/src/","vlayer-1.5.0/=dependencies/vlayer-1.5.0/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/vlayer/interfaces/IVerifier.sol":"IVerifier"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"dependencies/vlayer-1.5.0/src/CallAssumptions.sol":{"keccak256":"0x885a1ca11344a3154d3cb3b2cc18a77ec981f098701298d787a5173808cc3af7","urls":["bzz-raw://ddba86e136c60bc4199af9c5971819ad3a3f06c699dee46cf2923b8dbeb4e426","dweb:/ipfs/QmPwkGk8h8NkR6DUnDimn5HeweWgbvpsr9wf1VgmXYEPRB"],"license":"Apache-2.0"},"dependencies/vlayer-1.5.0/src/Proof.sol":{"keccak256":"0x32db566314f73f696e2ff0839ca7a41c9f04d74c96f2d8604c53f92dccfa3a43","urls":["bzz-raw://2ea032ed2a364dd97eeebe7df93cf252913284ea76a1fa1478d9436a916a83f3","dweb:/ipfs/QmW873QftHexSzpEqmAVJ9vUd1cJD584qTa7mzqkhhipMZ"],"license":"UNLICENSED"},"dependencies/vlayer-1.5.0/src/Seal.sol":{"keccak256":"0xa61c6146260bd3006392ec7b91bfb46c1d73493ff5a01c9ce702b8c90f1a392c","urls":["bzz-raw://ebf725dc623c0b6d3f8e74c2eb625d662303c22ba646fab710a4fbdf20d5e3c3","dweb:/ipfs/Qmat3kzvD19kLMHRmomknHzJnDdQfyU5pQDbhP5BsZTSvg"],"license":"UNLICENSED"},"src/vlayer/interfaces/IVerifier.sol":{"keccak256":"0xa8f93a2a021ca89da9f7f97f2795635dd8f765473c06522138f48e64e1c93cf5","urls":["bzz-raw://d13b132d3b22975de4f0220e901b816b931f33ddca7a95a09f2fe62a387ec111","dweb:/ipfs/QmYnNfAXZCeJnF2fUFAPMmzPMkmKe4VLoSeTpbYKG64o78"],"license":"MIT"},"src/vlayer/types/TeleportTypes.sol":{"keccak256":"0x117c2f5a486a8400eaf699e297f0a7ea7da36d3ca243108e2c15699fc367e302","urls":["bzz-raw://c938540eb6bf0e862974282bf214be1b8f9ff8674c9a887daedcf1c759fc36d5","dweb:/ipfs/QmaeXMuNAVMfVEbvU7HusQNsoEAaZaRHR5NE3zCEUjZtna"],"license":"UNLICENSED"}},"version":1},"id":86}